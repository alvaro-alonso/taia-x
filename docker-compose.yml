version: "3.4"

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - ./frontend/:/opt/taia-x/frontend:cached
      - /opt/taia-x/frontend/node_modules
    container_name: taia-x-frontend
    environment:
      - CHOKIDAR_INTERVAL=1000
      - CHOKIDAR_USEPOLLING=true
    ports:
      - 8080:8080

  sandbox:
    image: tqtezos/flextesa:20210514
    networks:
      - taia-x
    container_name: taia-x-sandbox
    environment:
      block_time: 1
      flextesa_node_cors_origin: "*"
    command: "flobox start"
    ports:
      - 20000:20000

  # to build a ipfs cluster: https://github.com/ipfs/ipfs-cluster/blob/master/docker-compose.yml
  ipfs:
    image: ipfs/go-ipfs:v0.8.0
    networks:
      - taia-x
    ports:
      - 5001:5001 # ipfs api
      - 8081:8080 # ipfs gateway
      # - 4001:4001 # ipfs swarm - expose if needed/wanted
    volumes:
      - ipfsf:/data/ipfs

  db_tzkt:
    container_name: tzkt-db
    networks:
      - taia-x
    restart: always
    image: postgres:13
    depends_on:
      - sandbox
    environment:
      POSTGRES_USER: tzkt
      POSTGRES_PASSWORD: qwerty
      POSTGRES_DB: tzkt_db
    #volumes:
    #  - postgres:/var/lib/postgresql/data
    expose:
      - 5432
    ports:
      - 0.0.0.0:5432:5432

  api_tzkt:
    container_name: tzkt-api
    networks:
      - taia-x
    restart: always
    image: bakingbad/tzkt-api:latest
    depends_on:
      - sandbox
      - db_tzkt
    environment:
      TZKT_API_KESTREL__ENDPOINTS__HTTP__URL: http://0.0.0.0:5000
      TZKT_API_ConnectionStrings__DefaultConnection: host=db_tzkt;port=5432;database=tzkt_db;username=tzkt;password=qwerty;
    expose:
      - 5000
    ports:
      - 0.0.0.0:5000:5000

  sync_tzkt:
    container_name: tzkt-sync
    networks:
      - taia-x
    restart: always
    image: bakingbad/tzkt-sync:latest
    environment:
      TZKT_TezosNode__Endpoint: http://sandbox:20000
      TZKT_ConnectionStrings__DefaultConnection: host=db_tzkt;port=5432;database=tzkt_db;username=tzkt;password=qwerty;
    depends_on:
      - sandbox
      - db_tzkt

  indexer:
    build: ./dipdup
    networks:
      - taia-x
    depends_on:
      - sandbox
      - db_tzkt
      - api_tzkt
      - db_dipdup
      - hasura
    restart: "no"
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-changeme}
      - ADMIN_SECRET=${ADMIN_SECRET:-changeme}

  db_dipdup:
    image: postgres:13
    networks:
      - taia-x
    restart: always
    ports:
      - 127.0.0.1:5433:5432
    #volumes:
    #  - db:/var/lib/postgres/data
    environment:
      - POSTGRES_USER=dipdup
      - POSTGRES_DB=dipdup
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-changeme}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  hasura:
    image: hasura/graphql-engine:v2.0.1
    networks:
      - taia-x
    ports:
      - 127.0.0.1:42000:8080
    depends_on:
      - sandbox
      - db_tzkt
      - api_tzkt
      - db_dipdup
    restart: always
    environment:
      - HASURA_GRAPHQL_DATABASE_URL=postgres://dipdup:${POSTGRES_PASSWORD:-changeme}@db_dipdup:5432/dipdup
      - HASURA_GRAPHQL_ENABLE_CONSOLE=true
      - HASURA_GRAPHQL_DEV_MODE=false
      - HASURA_GRAPHQL_ENABLED_LOG_TYPES=startup, http-log, webhook-log, websocket-log, query-log
      - HASURA_GRAPHQL_ADMIN_SECRET=${ADMIN_SECRET:-changeme}
      - HASURA_GRAPHQL_UNAUTHORIZED_ROLE=user

volumes:
  ipfsf:

networks:
  taia-x:
